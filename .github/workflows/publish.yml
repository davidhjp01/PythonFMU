name: Upload Python Package

#on:
#  release:
#    types: [published]

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest']
        python-version: [ '3.9']
#        os: [ 'ubuntu-latest', 'windows-latest' ]
#        python-version: [ '3.9', '3.10', '3.11', '3.12' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Compile wrapper on Windows
        if: startsWith(runner.os, 'Windows')
        run: |
          mkdir tmp-build
          cd tmp-build
          cmake $Env:github_workspace/pythonfmu/pythonfmu-export -DCMAKE_BUILD_TYPE=Release -A x64
          cmake --build . --config Release
          cd ..
      - name: Compile wrapper on Linux / macOS
        if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
        run: |
          mkdir tmp-build
          cd tmp-build
          cmake $GITHUB_WORKSPACE/pythonfmu/pythonfmu-export -DCMAKE_BUILD_TYPE=Release
          cmake --build .
          cd ..
      - name: Archive wrapper library
        uses: actions/upload-artifact@v4
        with:
          name: lib-wrapper-${{ runner.os }}-${{ matrix.python-version }}
          path: pythonfmu/resources

  deploy:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest']
        python:
          - version: '3.9'
            cp: 'cp39'
#          - version: '3.10'
#            cp: 'cp310'
#          - version: '3.11'
#            cp: 'cp311'
#          - version: '3.12'
#            cp: 'cp312'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.MATRIX_PYTHON_VERSION }}
    - name: Download wrappers
      uses: actions/download-artifact@v4
      with:
        name: lib-wrapper-${{ runner.os }}-${{ matrix.python.version }}
        path: pythonfmu/resources
        merge-multiple: true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.21.3
      env:
        CIBW_BUILD: "${{ matrix.python.cp }}-win_amd64 ${{ matrix.python.cp }}-manylinux_x86_64"
        CIBW_BEFORE_BUILD: >
          mkdir tmp-build &&
          cd tmp-build &&
          cmake {package}/pythonfmu/pythonfmu-export -DCMAKE_BUILD_TYPE=Release &&
          cmake --build .
      with:
        output-dir: dist

#    - name: Build and publish
#      env:
#        TWINE_USERNAME: __token__
#        TWINE_PASSWORD: ${{ secrets.PYPI_PYTHONFMU_API_TOKEN }}
#      run: |
#        python setup.py sdist bdist_wheel
#        twin check --strict dist/*
#        twine upload dist/*
